import pandas as pd
from utils.util import file_name_friendly, get_id, md_link

def make_readme(output_dir: str, playlists: pd.DataFrame, playlist_track: pd.DataFrame):
    readme = []

    readme.append(title("jbrown1618"))
    readme.append("")
    readme.append(byline())
    readme.append("")
    readme += playlists_section(playlists, playlist_track)
    readme.append("")

    with open(f"{output_dir}/README.md", "w") as f:
        f.write("\n".join(readme))


def title(user: str):
    return f"# Spotify Summary for {user}"


def playlists_section(playlists: pd.DataFrame, playlist_track: pd.DataFrame):
    track_counts = pd\
        .merge(left=playlists, right=playlist_track, left_index=True, right_on="playlist_uri", how="inner")\
        .groupby("playlist_uri")["track_uri"]\
        .count()

    display_playlists = pd\
        .merge(left=playlists, right=track_counts, left_index=True, right_on="playlist_uri", how="inner")\
        [["name", "track_uri"]]

    display_playlists["Open"] = ""
    for playlist_uri, row in display_playlists.iterrows():
        link = md_link("Open in Spotify", f"https://open.spotify.com/playlist/{get_id(playlist_uri)}")
        display_playlists["Open"][playlist_uri] = link

    display_playlists["name"] = display_playlists["name"].apply(lambda name: md_link(name, f"./playlists/{file_name_friendly(name)}.md"))

    display_playlists = display_playlists[["name", "Open", "track_uri"]]
    display_playlists.columns = ["Name", "Open", "Number of Songs"]

    display_playlists.sort_values(by="Name", inplace=True)

    table = display_playlists.to_markdown(index=False)

    return ["## Playlists", "", table]


def byline():
    return "Generated by [jbrown1618/spotify-stats](https://github.com/jbrown1618/spotify-stats)"
